{
    "stack": "securite",
    "citation": "Loi 1 : un robot ne peut porter atteinte à un être humain ni, restant passif, permettre qu'un être humain soit exposé au danger.[R]Loi 2 : un robot doit obéir aux ordres que lui donne un être humain, sauf si de tels ordres entrent en conflit avec la première loi.[R]Loi 3 : un robot doit protéger son existence tant que cette protection n'entre pas en conflit avec la première ou la deuxième loi.[R]#isaacAsimov",
    "axes": [
        {
            "title": "Syntax",
            "key": "syntax",
            "type": "categorie",
            "img": "",
            "children": [
                {
                    "title": "Lock Access",
                    "key": "cryptMe043",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "P4s$w0rD",
                            "key": "passpass043",
                            "type": "code",
                            "keyWords": "password pass cryptage crypter random aleatoire",
                            "description": "Generate password",
                            "content": [
                                "[cmt]Random",
                                "[ssc]32 characters long",
                                "[cod]openssl rand -base64 32",
                                "[cod]date | md5sum",
                                "[cod]date +%s | sha256sum | base64 | head -c 32 ; echo",
                                "[cod]strings /dev/urandom | grep -o '[[:alnum:]]' | head -n 32 | tr -d '\\n'; echo",
                                "[cod]< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-32};echo;",
                                "[cod]tr -cd '[:alnum:]' < /dev/urandom | fold -w30 | head -n1",
                                "[cod]< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c32",
                                "[cmt]Convert",
                                "[cod]echo -n \"myPassWord\" | md5sum",
                                "[ssc]passing -1 will generate an MD5 password, -5 a SHA256 and -6 SHA512 :",
                                "[cod]openssl passwd -6 -salt xyz  secretpass"
                            ],
                            "children": []
                        },
                        {
                            "title": "Chiffrement",
                            "key": "chiffrement043",
                            "type": "code",
                            "keyWords": "chiffrement file fichier cryptage crypter secure",
                            "description": "",
                            "content": [
                                "[cmt]Cloaker",
                                "[ssc]Un outil pour chiffrer et déchiffrer vos documents sous Windows, Linux et Mac"
                            ],
                            "children": []
                        },
                        {
                            "title": "Brouilleur",
                            "key": "brouilleur043",
                            "type": "code",
                            "keyWords": "brouilleur blur secure port spoofing spoof trap",
                            "description": "",
                            "content": [
                                "[cmt]Portspoof",
                                "[ssc]simulation de faux services sur des ports fermés"
                            ],
                            "children": []
                        },
                        {
                            "title": "firewall",
                            "key": "firewalLinux043",
                            "type": "code",
                            "keyWords": "iptable reseau port firewall secure",
                            "description": "",
                            "content": [
                                "[cmt]IPTABLE",
                                "[ssc]Version",
                                "[cod]/sbin/iptables -V",
                                "[ssc]read rules",
                                "[cod]sudo iptables -L -v -n",
                                "[ssc]Back up config",
                                "[cod]/sbin/iptables-save > /root/iptables-works",
                                "[ssc]delete rules",
                                "[cod]/sbin/iptables -F",
                                "[ssc]delete personal rules",
                                "[cod]/sbin/iptables -X",
                                "[ssc]BLOCK ALL",
                                "[cod]/sbin/iptables -P INPUT DROP",
                                "[cod]/sbin/iptables -P FORWARD DROP",
                                "[cod]/sbin/iptables -P OUTPUT DROP",
                                "[ssc]Politique par défaut de la table INPUT : DROP. (i.e bloquer tout le reste)",
                                "[cod]iptables -P INPUT DROP",
                                "[ssc]On est pas un routeur ou un NAT pour un réseau privé, on ne forward pas de paquet.",
                                "[cod]iptables -P FORWARD DROP",
                                "[ssc]__________",
                                "[ssc]Autoriser les flux en localhost",
                                "[cod]iptables -A INPUT -i lo -j ACCEPT",
                                "[cod]/sbin/iptables -A OUTPUT -o lo -j ACCEPT",
                                "[cod]/sbin/iptables -A INPUT -i lo -j ACCEPT",
                                "[ssc]Autoriser les connexions déjà établies",
                                "[cod]iptables -A INPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT",
                                "[cod]/sbin/iptables -A OUTPUT -o eth0 --match state --state ESTABLISHED -j ACCEPT",
                                "[cod]/sbin/iptables -A INPUT  -i eth0 --match state --state ESTABLISHED -j ACCEPT",
                                "[ssc]Autoriser un port",
                                "[cod]iptables -A INPUT -p tcp -m tcp --dport PORTXXXXX -j ACCEPT",
                                "[ssc]Autoriser PORT et uniquement pour une ip prédéfini.",
                                "[cod]iptables -A INPUT -s IPXXXXXX -p tcp -m tcp --dport PORTXXXXX -j ACCEPT",
                                "[ssc]Filtre les ip sur le SSH",
                                "[cod]INTERFACE=\"eth0\" \nPUB_SSH_ONLY=\"122.xx.yy.zz/29\"\n# Allow ssh only from selected public ips\nfor ip in ${PUB_SSH_ONLY}\ndo\n        iptables -A INPUT -i ${INTERFACE} -s ${ip} -p tcp -d ${SERVER_IP} --destination-port 22 -j ACCEPT\n        iptables -A OUTPUT -o ${INTERFACE} -d ${ip} -p tcp -s ${SERVER_IP} --sport 22 -j ACCEPT\ndone",
                                "[ssc]Ajouter un préfixe dans les journaux générés pour faciliter la recherche d'erreurs dans un fichier volumineux.",
                                "[cod]sudo iptables -A INPUT -s 192.168.10.0/24 -j LOG --log-prefix '** SUSPECT **'",
                                "[ssc]Block Ip",
                                "[cod]sudo iptables -A INPUT -s 11.22.33.44 -j DROP",
                                "[ssc]List Ip ban",
                                "[cod]sudo iptables -L INPUT -v -n | grep DROP",
                                "[ssc]deBan Ip",
                                "[cod]sudo iptables -D INPUT numero-de-la-regle",
                                "[ssc]or",
                                "[cod]sudo iptables -D INPUT -s xx.xx.xx.xx/32 -j DROP",
                                "[cod]Limiter les connexions sur le serveur",
                                "[cod]sudo iptables -A INPUT -p tcp --dport 80 -m limit --limit 100/minute --limit-burst 200 -j ACCEPT",
                                "[ssc]Limiter le nombre de connexions simultanées établies à partir d’une adresse IP unique sur un port donné.",
                                "[cod]iptables -A INPUT -p tcp --syn --dport 22 -m connlimit --connlimit-above 5 -j REJECT\niptables -A INPUT -p tcp --syn --dport 80 -m connlimit --connlimit-above 40 -j REJECT\niptables -A INPUT -p tcp --syn --dport 443 -m connlimit --connlimit-above 40 -j REJECT",
                                "[ssc]Block domain",
                                "[cod]host -t a www.xXx.com"
                            ],
                            "children": []
                        }
                    ]
                },
                {
                    "title": "Monitoring",
                    "key": "monit043",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "Surveillance Sytem",
                            "key": "monitOs043",
                            "type": "code",
                            "keyWords": "os system monitoring surveillance analyse user connected",
                            "description": "",
                            "content": [
                                "[cmt]current user connection",
                                "[cod]who -aH",
                                "[ssc]OU",
                                "[cod]w",
                                "[cmt]Get Security Information of Linux Process",
                                "[cod]ps -eM",
                                "[cmt]Big list open files, network connections and much more...",
                                "[cod]lsof"
                            ],
                            "children": []
                        },
                        {
                            "title": "Surveillance reseaux",
                            "key": "monitNetwork043",
                            "type": "code",
                            "keyWords": "",
                            "description": "",
                            "content": [
                                "[cmt]traceroute and ping programs in a single network diagnostic tool.",
                                "[cod]mtr",
                                "[cmt]carte reseau",
                                "[ssc]sudo iftop  <interface>",
                                "[cod]sudo iftop wlp3s0",
                                "[cmt]Socket Statistique",
                                "[ssc]SS remplace netStat[depreciate]",
                                "[cmt]all open network ports :",
                                "[cod]ss -pl",
                                "[cmt]List currently established, closed, orphaned and waiting TCP sockets",
                                "[cod]ss -s",
                                "[ssc]TCP Sockets :",
                                "[cod]ss -t -a",
                                "[ssc]UDP Sockets",
                                "[cod]ss -u -a",
                                "[ssc]RAW Sockets",
                                "[cod]ss -w -a",
                                "[ssc]UNIX Sockets",
                                "[cod]ss -x -a",
                                "[ssc]SMTP Connections",
                                "[cod]ss -o state established '( dport = :smtp or sport = :smtp )'",
                                "[ssc]HTTP&HTTPS Connections",
                                "[cod]ss -o state established '( dport = :http or sport = :http )'",
                                "[cod]ss -o state established '( dport = :https or sport = :https )'",
                                "[cmt]NETSTAT windows",
                                "[cod]netstat | findstr ESTABLISHED",
                                "[cod]netstat | findstr LISTEN  ",
                                "[cod]netstat | findstr CLOSE_WAIT  ",
                                "[cod]netstat | findstr TIME_WAIT"
                            ],
                            "children": []
                        },
                        {
                            "title": "Surveillance Log",
                            "key": "monitLog043",
                            "type": "code",
                            "keyWords": "log monitoring surveillance analyse logs",
                            "description": "",
                            "content": [
                                "[cmt]Temps Reel",
                                "[cod]sudo tail -n2 -f /lefichierde.log",
                                "[cmt]LNAV",
                                "[ssc]visualisateur de fichiers de logs libre et pratique",
                                "[cmt]List of users who logged",
                                "[ssc]from /var/log/wtmp",
                                "[cod]last -ax",
                                "[cmt]From Past",
                                "[cod]journalctl",
                                "[cod]journalctl -u network.service",
                                "[cod]journalctl -u ssh.service",
                                "[ssc]kernel message from current boot :",
                                "[cod]journalctl -k"
                            ],
                            "children": []
                        },
                        {
                            "title": "Port",
                            "key": "port043",
                            "type": "code",
                            "keyWords": "brouilleur blur stress secure port spoofing spoof trap",
                            "description": "",
                            "content": [
                                "[cmt]psad",
                                "[ssc]Linux Detect And Block Port Scan Attacks In Real Time",
                                "[cod]sudo apt-get install psad"
                            ],
                            "children": []
                        }
                    ]
                },
                {
                    "title": "Analyse",
                    "key": "forensic043",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "History",
                            "key": "cmdhisto043",
                            "type": "code",
                            "keyWords": "cmd history forensic date commande",
                            "description": "date + heure pour l'historique des commandes",
                            "content": [
                                "[cmt]%F date format %Y-%m-%d",
                                "[cmt]%T heure format (%H:%M:%S).",
                                "[cod]export HISTTIMEFORMAT='%F %T '",
                                "[cod]history"
                            ],
                            "children": []
                        },
                        {
                            "title": "Logs",
                            "key": "logAnalyse043",
                            "type": "code",
                            "keyWords": "log logs analyse auth trace historique",
                            "description": "",
                            "content": [
                                "[cmt]Log",
                                "[ssc]Total size :",
                                "[cod]du -sh /var/log/journal/",
                                "[ssc]Archive et rafraichis les logs :",
                                "[cod]sudo journalctl --rotate",
                                "[ssc]Clear journal log older than N days :",
                                "[cod]sudo journalctl --vacuum-time=2d",
                                "[ssc]Failed and successful login attempts. (SSH, SUDO...) :",
                                "[cod]sudo cat /var/log/auth.log",
                                "[ssc] Where whole system logs or current activity logs are available.",
                                "[cod]sudo cat /var/log/message",
                                "[ssc] Kernel logs.",
                                "[cod]sudo cat /var/log/kern.log",
                                "[ssc] Crond logs (cron job).",
                                "[cod]sudo cat /var/log/cron.log",
                                "[ssc] Mail server logs.",
                                "[cod]sudo cat /var/log/maillog",
                                "[ssc] System boot log.",
                                "[cod]sudo cat /var/log/boot.log",
                                "[ssc] MySQL database server log file.",
                                "[cod]sudo cat /var/log/mysqld.log",
                                "[ssc] Login records file.",
                                "[cod]sudo cat /var/log/wtmp",
                                "[ssc] Apache",
                                "[cod]sudo cat /var/log/apache2/access.log",
                                "[ssc] Apache",
                                "[cod]sudo cat /var/log/apache2/error.log"
                            ],
                            "children": []
                        },
                        {
                            "title": "metaData",
                            "key": "img043",
                            "type": "code",
                            "keyWords": "metadata forensic img clean cleaning jpeg png exif data clear jhead exiftool",
                            "description": "",
                            "content": [
                                "[cmt]exiftool",
                                "[ssc]install :",
                                "[cod]sudo apt-get install libimage-exiftool-perl",
                                "[ssc]read metaData :",
                                "[cod]exiftool image.jpeg",
                                "[ssc]remove all metaData :",
                                "[cod]exiftool -all= image.jpeg",
                                "[cmt]jhead",
                                "[ssc]ability to remove non-image metadata from JPEG files",
                                "[cod]man jhead"
                            ],
                            "children": []
                        },
                        {
                            "title": "Mails",
                            "key": "mails043",
                            "type": "code",
                            "keyWords": "mails pattern forensic",
                            "description": "",
                            "content": [
                                "[cmt]mailsniper",
                                "[ssc]mail search by pattern"
                            ],
                            "children": []
                        },
                        {
                            "title": "Reconnaissance Facial",
                            "key": "reconnaissanceFacial043",
                            "type": "code",
                            "keyWords": "forensic visage face reconnaissance identite id identy irl hardware",
                            "description": "recherche sur le web a partir d'un visage en photo",
                            "content": [
                                "[ssc]Google russe",
                                "[lnk]https://yandex.ru/images/"
                            ],
                            "children": []
                        }
                    ]
                },
                {
                    "title": "Anonymisation",
                    "key": "anonymisationMetodo043",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "PROXY",
                            "key": "proxy043",
                            "type": "code",
                            "keyWords": "",
                            "description": "intermédiaire placer entre deux hôtes",
                            "content": [
                                "[cmt]proxy",
                                "[ssc]"
                            ],
                            "children": []
                        },
                        {
                            "title": "VPN",
                            "key": "vpn043",
                            "type": "code",
                            "keyWords": "vpn proxy prive private network ip hide secure",
                            "description": "Virtual Private Network",
                            "content": [
                                "[cmt]service de VPN communautaire, gratuit et anonyme",
                                "[ssc]PenguinProxy",
                                "[lnk]https://www.penguinproxy.com/"
                            ],
                            "children": []
                        },
                        {
                            "title": "TOR",
                            "key": "tor043",
                            "type": "code",
                            "keyWords": "",
                            "description": "",
                            "content": [
                                "[cmt]TOR",
                                "[ssc]"
                            ],
                            "children": []
                        },
                        {
                            "title": "Communication",
                            "key": "communicationAnonym043",
                            "type": "code",
                            "keyWords": "crypter cryptage chat anonyme communication",
                            "description": "",
                            "content": [
                                "[cmt]CHAT TOTALEMENT CRYPTER ANONYME",
                                "[ssc]darkwire",
                                "[lnk]https://darkwire.io/"
                            ],
                            "children": []
                        },
                        {
                            "title": "Navigateur",
                            "key": "chatAnonym043",
                            "type": "code",
                            "keyWords": "navigateur browser firefox chrome explorer config blur emprunte anonyme communication",
                            "description": "",
                            "content": [
                                "[cmt]Firegloves",
                                "[ssc]Brouiller l'emprunte config du navigateur"
                            ],
                            "children": []
                        },
                        {
                            "title": "MAC address",
                            "key": "MACAnonym043",
                            "type": "code",
                            "keyWords": "MAC addr address adresse mac macaddr ip",
                            "description": "",
                            "content": [
                                "[cmt]Network devices",
                                "[cod]ip link show",
                                "[cmt]Stop interface reseau",
                                "[cod]sudo ip link set dev <your device here> down",
                                "[ssc]OU",
                                "[cod]sudo /etc/init.d/networking stop",
                                "[cmt]Ifconfig",
                                "[cod]sudo ip link set dev <your device here> address <your new mac address>",
                                "[cmt]MacChanger",
                                "[cod]sudo apt-get install macchanger",
                                "[ssc]addr random , mm gamm",
                                "[cod]macchanger --another eth1",
                                "[cmt]Start interface réseau",
                                "[cod]sudo ip link set dev <your device here> up",
                                "[ssc]OU",
                                "[cod]sudo /etc/init.d/networking start"
                            ],
                            "children": []
                        }
                    ]
                },
                {
                    "title": "Nettoyage",
                    "key": "cleaning043",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "Remove",
                            "key": "deleted042",
                            "type": "code",
                            "keyWords": "bash linux rm cmd supression delete kill",
                            "description": "",
                            "content": [
                                "[cmt]RM Super Sayan",
                                "[cod]shred -zu filename",
                                "[cmt]Delete empty folder",
                                "[cod]find . -type d -empty -delete"
                            ],
                            "children": []
                        },
                        {
                            "title": "Packets",
                            "key": "deleted043",
                            "type": "code",
                            "keyWords": "bash linux rm packets supression delete kill clean cleaning space remove",
                            "description": "Linux",
                            "content": [
                                "[cmt]Cache Size",
                                "[cod]sudo du -sh /var/cache/apt",
                                "[cmt]clean",
                                "[cod]sudo apt clean",
                                "[cod]sudo apt autoclean",
                                "[cod]sudo apt autoremove",
                                "[cmt]Snap lib",
                                "[ssc]folder size",
                                "[cod]du -h /var/lib/snapd/snaps",
                                "[ssc]Snaps useless if apt used",
                                "[cod]Sudo apt autoremove snapd ",
                                "[cod]Sudo apt autoremove --purge snapd",
                                "[ssc]fr désactivé",
                                "[cod]snap list --all | awk 'BEGIN {print \"#! /bin/sh\\n\"} ; /désactivé/ {print \"snap remove \"$1\" --revision \"$3\"\\n\"} ; END {print \"exit 0\"}' > script && chmod +x script && ./script && rm script && echo && snap list --all && echo && df -Th",
                                "[ssc]en disabled",
                                "[cod]snap list --all | awk 'BEGIN {print \"#! /bin/sh\\n\"} ; /disabled/ {print \"snap remove \"$1\" --revision \"$3\"\\n\"} ; END {print \"exit 0\"}' > script && chmod +x script && ./script && rm script && echo && snap list --all && echo && df -Th",
                                "[ssc]Then",
                                "[cod]sudo apt update && apt upgrade"
                            ],
                            "children": []
                        },
                        {
                            "title": "OS",
                            "key": "043",
                            "type": "code",
                            "keyWords": "bash linux rm supression delete clean cleaning space remove poubelle bin thumbnails sauvegarde cache",
                            "description": "linux",
                            "content": [
                                "[cmt]vidange poubelle",
                                "[cod]rm -r -f ~/.local/share/Trash/*/*",
                                "[cmt]Fichiers de sauvegarde",
                                "[cod]find ~/ -name '*~' ",
                                "[cod]find ~/ -name '*~' -print0 | xargs -0 rm",
                                "[cmt]thumbnails cache",
                                "[cod]rm -rf ~/.cache/thumbnails/*"
                            ],
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "Méthodes",
            "key": "Methodes",
            "type": "categorie",
            "img": "",
            "children": [
                {
                    "title": "T0D0",
                    "key": "meTodo043",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "Serveur",
                            "key": "servtodo043",
                            "type": "code",
                            "keyWords": "serveur todo metode pratiques bonnes secure",
                            "description": " ",
                            "content": [
                                "[code]foe"
                            ],
                            "children": []
                        },
                        {
                            "title": "Rdy 4 P0wn",
                            "key": "saveAss043",
                            "type": "code",
                            "keyWords": "save hide secure todo metode pratiques bonnes secure",
                            "description": " ",
                            "content": [
                                "[code]foe"
                            ],
                            "children": []
                        },
                        {
                            "title": "Sh3rlocKed",
                            "key": "reverseatak043",
                            "type": "code",
                            "keyWords": "save reverse find post forensic secure todo metode pratiques bonnes secure",
                            "description": " ",
                            "content": [
                                "[code]foe"
                            ],
                            "children": []
                        },
                        {
                            "title": "Ubiquiste",
                            "key": "ubiquiste043",
                            "type": "code",
                            "keyWords": "save surveillance monitoring reseaux port etablished current actual actuel connection socket hide secure todo metode pratiques bonnes secure",
                            "description": " ",
                            "content": [
                                "[code]foe"
                            ],
                            "children": []
                        }
                    ]
                },
                {
                    "title": "System",
                    "key": "os043",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "Distrib",
                            "key": "distrib043",
                            "type": "code",
                            "keyWords": "os unix linux tails anonyme system incognito",
                            "description": "",
                            "content": [
                                "[cmt]The Amnesic Incognito Live System ",
                                "[ssc]Tails",
                                "[lnk]https://tails.boum.org/install/"
                            ],
                            "children": []
                        },
                        {
                            "title": "Virtual Machine",
                            "key": "vm043",
                            "type": "code",
                            "keyWords": "",
                            "description": "",
                            "content": [],
                            "children": []
                        },
                        {
                            "title": "Post-Install",
                            "key": "postInstall043",
                            "type": "code",
                            "keyWords": "",
                            "description": "",
                            "content": [],
                            "children": []
                        }
                    ]
                },
                {
                    "title": "ShielD",
                    "key": "securit043",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "FireWall",
                            "key": "firewall043",
                            "type": "code",
                            "keyWords": "iptables firewall port secure",
                            "description": "Delete, Persistence, Anti-scan, Anti-Ping",
                            "content": [
                                "[cmt]IPTABLES",
                                "[cmt]DELETE",
                                "[cod]iptables -F\niptables -X\niptables -t nat -F\niptables -t nat -X\niptables -t mangle -F\niptables -t mangle -X\niptables -P INPUT ACCEPT\niptables -P FORWARD ACCEPT\niptables -P OUTPUT ACCEPT",
                                "[cmt]persistence",
                                "[link]https://doc.ubuntu-fr.org/iptables#via_un_fichier",
                                "[ssc]create script",
                                "[cod]sudo touch /etc/network/if-pre-up.d/SCRIPTNAME ",
                                "[ssc]template",
                                "[cod]#!/bin/bash\niptables-restore < /etc/iptables.test.rules\n\n####################################...\n#   _      __       __   __            \n#  (_)__  / /____ _/ /  / /__ ___     \n# / / _ \\/ __/ _ `/ _ \\/ / -_|_-<   \n#/_/ .__/\\__/\\_,_/_.__/_/\\__/___/  \n# /_/__       __                      \n#  / _ \\__ __/ /__ ___               \n# / , _/ // / / -_|_-<                \n#/_/|_|\\_,_/_/\\__/___/              \n#                                     \n###################################...",
                                "[cod]sudo chmod +x /etc/network/if-pre-up.d/iptables",
                                "[ssc]Verification",
                                "[cod]sudo iptables -L",
                                "[ssc][Alternative] Start iptables script at boot via Systemd",
                                "[cod]sudo touch /lib/systemd/system/firewall.service",
                                "[ssc]template",
                                "[cod][Unit]\nDescription=Firewall\nRequires=network-online.target\nAfter=network-online.target\n \n[Service]\nUser=root\nType=oneshot\nRemainAfterExit=yes\nExecStart=/etc/init.d/nom_de_votre_script_iptables(modifier_le_nom!) start\nExecStop=/etc/init.d/nom_de_votre_script_iptables(modifier_le_nom!) stop\n \n[Install]\nWantedBy=multi-user.target",
                                "[cod]sudo systemctl enable firewall.service",
                                "[ssc]Verification",
                                "[cod]systemctl status firewall",
                                "[cmt]ANTI-SCAN",
                                "[ssc]nmap",
                                "[cod]IPTABLES -A INPUT -p tcp --tcp-flags SYN,ACK SYN,ACK -m state --state NEW -j DROP\nIPTABLES -A INPUT -p tcp --tcp-flags ALL NONE -j DROP\n\nIPTABLES -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP\nIPTABLES -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP\nIPTABLES -A INPUT -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP\n\nIPTABLES -A INPUT -p tcp --tcp-flags FIN,RST FIN,RST -j DROP\nIPTABLES -A INPUT -p tcp --tcp-flags ACK,FIN FIN -j DROP\nIPTABLES -A INPUT -p tcp --tcp-flags ACK,PSH PSH -j DROP\nIPTABLES -A INPUT -p tcp --tcp-flags ACK,URG URG -j DROP\n\niptables -A port-scan -p tcp --tcp-flags SYN,ACK,FIN,RST RST -m limit --limit 1/s -j RETURN\niptables -A port-scan -j DROP --log-level 6\niptables -A specific-rule-set -p tcp --syn -j syn-flood\niptables -A specific-rule-set -p tcp --tcp-flags SYN,ACK,FIN,RST RST -j port-scan",
                                "[cmt]PING",
                                "[ssc]Autorise ping to external ip et à répondre ",
                                "[cod]iptables -A OUTPUT -p icmp -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT",
                                "[ssc]Older version",
                                "[cod]iptables -A OUTPUT -p icmp -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT",
                                "[ssc]or just",
                                "[cod]iptables -A INPUT -p icmp -j ACCEPT",
                                "[ssc]block PING",
                                "[cod]iptables -A INPUT --proto icmp -j DROP",
                                "[cod]/sbin/iptables -A INPUT -p icmp -j DROP",
                                "[ssc]Block via kernel variable",
                                "[cod]echo “1” > /proc/sys/net/ipv4/icmp_echo_ignore_all",
                                "[ssc]Persistence",
                                "[ssc]In order to make the above rule permanent, append following line to /etc/sysctl.conf file and, subsequently, apply the rule with sysctl command.",
                                "[cod]echo \"net.ipv4.icmp_echo_ignore_all = 1\" >> /etc/sysctl.conf",
                                "[cod]sysctl -p"
                            ],
                            "children": []
                        },
                        {
                            "title": "Files",
                            "key": "secureFile043",
                            "type": "code",
                            "keyWords": "image img file files secure meta data metadata",
                            "description": "",
                            "content": [
                                "[cmt]dd",
                                "[link]BASH Escape Ascii-Art",
                                "[cod]cat <<OSEF \n''''leDess1n'''Plein de quote \nOSEF "
                            ],
                            "children": []
                        }
                    ]
                },
                {
                    "title": "Hid'N",
                    "key": "PostSecure043",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "Oo",
                            "key": "Boucle0ss4ll3",
                            "type": "code",
                            "keyWords": "",
                            "description": " ",
                            "content": [
                                "[code]for variable in 'valeur1' 'valeur2' 'valeur3'\ndo\n        echo \"La variable vaut $variable\"\ndone"
                            ],
                            "children": []
                        }
                    ]
                },
                {
                    "title": "Sentin'L",
                    "key": "sauron043",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "IP",
                            "key": "scanIp043",
                            "type": "code",
                            "keyWords": "",
                            "description": "",
                            "content": [
                                "[cod]nmap -sP 192.168.0.1/24"
                            ],
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "Ressources",
            "key": "Ressources",
            "type": "categorie",
            "img": "",
            "children": [
                {
                    "title": "Bonnes Pratiques",
                    "key": "bonnePratique043",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "SERVEUR",
                            "key": "srv043",
                            "type": "code",
                            "keyWords": "",
                            "description": "",
                            "content": [
                                "[cmt]SOURCING"
                            ],
                            "children": []
                        }
                    ]
                },
                {
                    "title": "Referenciel",
                    "key": "ref",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "Ethatique",
                            "key": "etat",
                            "type": "code",
                            "keyWords": "",
                            "description": "",
                            "content": [
                                "[cmt]🇫🇷",
                                "[ssc]ANSSI",
                                "[lnk]https://www.ssi.gouv.fr/",
                                "[ssc]CERT FR",
                                "[lnk]https://www.cert.ssi.gouv.fr/",
                                "[ssc]CyberMalveillance",
                                "[lnk]https://www.cybermalveillance.gouv.fr/"
                            ],
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "title": "Scripts",
            "key": "Scripts",
            "type": "categorie",
            "img": "",
            "children": [
                {
                    "title": "Iptables",
                    "key": "iptableScript043",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "Autarcie",
                            "key": "autarcieFire043",
                            "type": "code",
                            "keyWords": "iptables strict secure block firewall port traffic",
                            "description": "Autarcie",
                            "content": [
                                "[cod]#!/bin/bash\n\n###################################################\n#*/=============================================\\*#\n# ||                      .__                  || #\n# ||   ____   ____   ____ |  |   ____   ____   || #\n# || _/ __ \\_/ __ \\ / ___\\|  |  /  _ \\ /  _ \\  || #\n# || \\  ___/\\  ___// /_/  >  |_(  <_> |  <_> ) || #\n# ||  \\___  >\\___  >___  /|____/\\____/ \\____/  || #\n# ||      \\/     \\/_____/                  2020|| #\n#.\\=============================================/.#\n################################################### \n\niptables-restore < /etc/iptables.neant.rules\n \n###############################\n#  ______ _           _       #\n# |  ____| |         | |      #\n# | |__  | |_   _ ___| |__.   #\n# |  __| | | | | / __| '_  \\  # \n# | |    | | |_| \\__ \\ | | |  #\n# |_|    |_|\\__,_|___/_| |_|  #\n###############################\n\niptables -F\niptables -X\niptables -t nat -F\niptables -t nat -X\niptables -t mangle -F\niptables -t mangle -X\n\n#########################\n#  _      ____   _____  #\n# | |    / __ \\ / ____| #\n# | |   | |  | | |  __  #\n# | |   | |  | | | |_ | #\n# | |___| |__| | |__| | #\n# |______\\____/ \\_____| #\n#########################\n\niptables -A OUPUT -j LOG\niptables -A INPUT -j LOG\niptables -A FORWARD -j LOG \n\n####################################\n#  ____  _      ____   _____ _  __ #\n# |  _ \\| |    / __ \\ / ____| |/ / #\n# | |_) | |   | |  | | |    | ' /  #\n# |  _ <| |   | |  | | |    |  <   #\n# | |_) | |___| |__| | |____| . \\  #\n# |____/|______\\____/ \\_____|_|\\_\\ #\n####################################\n\n/sbin/iptables -P INPUT DROP\n/sbin/iptables -P OUTPUT DROP \n/sbin/iptables -P FORWARD DROP\n \nexit 0"
                            ],
                            "children": []
                        },
                        {
                            "title": "MLP",
                            "key": "MLPFire043",
                            "type": "code",
                            "keyWords": "open mlp iptables strict secure block firewall port traffic",
                            "description": "My Little Poney",
                            "content": [
                                "[cod]#!/bin/bash\n \n###################################################\n#*/=============================================\\*#\n# ||                      .__                  || #\n# ||   ____   ____   ____ |  |   ____   ____   || #\n# || _/ __ \\_/ __ \\ / ___\\|  |  /  _ \\ /  _ \\  || #\n# || \\  ___/\\  ___// /_/  >  |_(  <_> |  <_> ) || #\n# ||  \\___  >\\___  >___  /|____/\\____/ \\____/  || #\n# ||      \\/     \\/_____/                  2020|| #\n#.\\=============================================/.#\nclear\n\n## IPTABLES \n## CONFIG : [CLEAR]\n\necho \"Clear Firewall rules...\"\n\n## A QUOI SQ SERT\ntouch /etc/iptables.clear.rules\niptables-restore < /etc/iptables.clear.rules\necho \"iptables.clear.rules\"\n \n###############################\n#  ______ _           _       #\n# |  ____| |         | |      #\n# | |__  | |_   _ ___| |__.   #\n# |  __| | | | | / __| '_  \\  # \n# | |    | | |_| \\__ \\ | | |  #\n# |_|    |_|\\__,_|___/_| |_|  #\n###############################\necho \"Flush\"\n\niptables -F\niptables -X\niptables -t nat -F\niptables -t nat -X\niptables -t mangle -F\niptables -t mangle -X\n\n###############################\n#   ____  _____  ______ _   _ #\n#  / __ \\|  __ \\|  ____| \\ | |#\n# | |  | | |__) | |__  |  \\| |#\n# | |  | |  ___/|  __| | . ` |#\n# | |__| | |    | |____| |\\  |#\n#  \\____/|_|    |______|_| \\_|#\n###############################\necho \"Open All Access\"\n\niptables -P INPUT ACCEPT\niptables -P FORWARD ACCEPT\niptables -P OUTPUT ACCEPT\n \necho \"End.\"\n\nexit 0"
                            ],
                            "children": []
                        },
                        {
                            "title": "HARD",
                            "key": "hardFire043",
                            "type": "code",
                            "keyWords": "",
                            "description": "",
                            "content": [
                                "[cmt]Script Bash",
                                "[cod]In progress"
                            ],
                            "children": []
                        },
                        {
                            "title": "33Gl00",
                            "key": "eeglooFire043",
                            "type": "code",
                            "keyWords": "",
                            "description": "Custom",
                            "content": [
                                "[cod]#!/bin/bash\nclear\n###################################################\n#*/=============================================\\*#\n# ||                      .__                  || #\n# ||   ____   ____   ____ |  |   ____   ____   || #\n# || _/ __ \\_/ __ \\ / ___\\|  |  /  _ \\ /  _ \\  || #\n# || \\  ___/\\  ___// /_/  >  |_(  <_> |  <_> ) || #\n# ||  \\___  >\\___  >___  /|____/\\____/ \\____/  || #\n# ||      \\/     \\/_____/                  2020|| #\n#.\\=============================================/.#\n################################################### \n\n## IPTABLES \n## CONFIG : [CLASSIK]\n \n### start firewall ###\necho \"Setting $(hostname) Firewall Hard mode...\"\n\nIF_RESEAU=\"wlp3s0\"\nLAN=\"192.168.0.0/255.255.255.0\"\n\necho \"Interface RESEAU : $IF_RESEAU\"\necho \"LAN : $LAN\"\n\n## A QUOI SQ SERT\ntouch /etc/iptables.eegloo.rules\niptables-restore < /etc/iptables.eegloo.rules\necho \"iptables.eegloo.rules\"\n \n\n# Préciser les helpers utilisés pour les règles RELATED et les paramètres de ceux-ci, et ainsi limiter le spoofing d’addresse.\nmodprobe nf_conntrack nf_conntrack_helper=0\n\n## iptables rules\n \n###############################\n#  ______ _           _       #\n# |  ____| |         | |      #\n# | |__  | |_   _ ___| |__.   #\n# |  __| | | | | / __| '_  \\  # \n# | |    | | |_| \\__ \\ | | |  #\n# |_|    |_|\\__,_|___/_| |_|  #\n###############################\necho \"Flush\"\n\niptables -F\niptables -X\niptables -t nat -F\niptables -t nat -X\niptables -t mangle -F\niptables -t mangle -X\n\n####################################\n#  ____  _      ____   _____ _  __ #\n# |  _ \\| |    / __ \\ / ____| |/ / #\n# | |_) | |   | |  | | |    | ' /  #\n# |  _ <| |   | |  | | |    |  <   #\n# | |_) | |___| |__| | |____| . \\  #\n# |____/|______\\____/ \\_____|_|\\_\\ #\n####################################\n\niptables -P INPUT DROP\niptables -P FORWARD DROP\niptables -P OUTPUT DROP\n\n#########################\n#  _____ _              #\n# |  __ (_)             #\n# | |__) | _ __   __ _  #\n# |  ___/ | '_ \\ / _` | #\n# | |   | | | | | (_| | #\n# |_|   |_|_| |_|\\__, | #\n#                 __/ | #\n#                |___/  #\n#########################\necho \"Ping Accepted\"\n\n# BLOCK REPONSE\n# iptables -A OUTPUT -p icmp --icmp-type echo-request -j DROP\n# iptables -A OUTPUT -p icmp --icmp-type 8 -j DROP\n\niptables -A INPUT -p icmp -j ACCEPT\niptables -A OUTPUT -p icmp -j ACCEPT\n\n# PING entrant :\n# iptables -A INPUT -p icmp --icmp-type 8 -j ACCEPT\n\n#connexions en cours###################\n#              _____                  #\n#             / ____|                 #\n#   ___ _ __ | |     ___  _   _ _ __  #\n#  / _ \\ '_ \\| |    / _ \\| | | | '__| #\n# |  __/ | | | |___| (_) | |_| | |    #\n#  \\___|_| |_|\\_____\\___/ \\__,_|_|    #\n#######################################\necho \"connexions :\"\n\n# AUTORISE connexion ouverte pour le trafic en entrée.\n#      Evite l analyse a chaques paquets\niptables -A INPUT  -i $IF_RESEAU --match state --state ESTABLISHED,RELATED -j ACCEPT\n# iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\n \n## AUTORISE connexion ouverte pour le trafic en sortie.\n#        Evite l analyse a chaques paquets\niptables -A OUTPUT -o $IF_RESEAU --match state --state ESTABLISHED,RELATED -j ACCEPT\n# iptables -A OUTPUT -m conntrack ! --ctstate INVALID -j ACCEPT\necho \"   - actives\"\n\n# AUTORISE les connexions sur la machine (127.0.0.1)\niptables -A INPUT -i lo -j ACCEPT\niptables -A OUTPUT -o lo -j ACCEPT\necho \" - Machine lo 127.0.0.1\"\n\n# AUTORISE les connexions du reseau local (192.168.0)\n# iptables -A INPUT -s $LAN -j ACCEPT\n# iptables -A OUTPUT -d $LAN -j ACCEPT\n# echo \" - Local Network\"\n\n## AUTORISE Multicast / paquets broadcastés.\n# iptables -A INPUT -m pkttype --pkt-type multicast -j ACCEPT\n# echo \" - MultiCast\"\n\n###############################\n#   ____  _____  ______ _   _ #\n#  / __ \\|  __ \\|  ____| \\ | |#\n# | |  | | |__) | |__  |  \\| |#\n# | |  | |  ___/|  __| | . ` |#\n# | |__| | |    | |____| |\\  |#\n#  \\____/|_|    |______|_| \\_|#\n###############################\necho \"Access :\"\n\n# # SSH\niptables -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT\niptables -A OUTPUT -p tcp -m tcp --dport 22 -j ACCEPT\necho \"  - Open SSH\"\n\n# HTTP\niptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT\niptables -A OUTPUT -p tcp -m tcp --dport 80 -j ACCEPT\n# iptables -A OUTPUT -o ${IF_RESEAU} -p tcp --sport 80 -d 0/0 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT\necho \"   - Open HTTP\"\n\n# HTTPS\niptables -A INPUT -p tcp -m tcp --dport 443 -j ACCEPT\niptables -A OUTPUT -p tcp -m tcp --dport 443 -j ACCEPT\necho \"    - Open HTTPS\"\n\n# # NodeJS\niptables -A INPUT -p tcp -m tcp --dport 3000 -j ACCEPT\niptables -A INPUT -p tcp -m tcp --dport 9000 -j ACCEPT\necho \"   - Open NodeJs\"\n\n# IRC\niptables -A INPUT -p tcp -m tcp --dport 6666 -j ACCEPT\niptables -A INPUT -p tcp -m tcp --dport 6667 -j ACCEPT\niptables -A OUTPUT -p tcp -m tcp --dport 6666 -j ACCEPT\niptables -A OUTPUT -p tcp -m tcp --dport 6667 -j ACCEPT\necho \" - Open IRC\"\n\n# # FTP\n# iptables -A INPUT -p tcp -m tcp --dport 21 -j ACCEPT\n# echo \"  - Open FTP\"\n\n# # SMTP\n# iptables -A OUTPUT -o ${IF_RESEAU} -p tcp --dport 25 -m state --state NEW,ESTABLISHED -j ACCEPT\n# iptables -A INPUT -i ${IF_RESEAU} -p tcp --sport 25 -m state --state ESTABLISHED -j ACCEPT\n# echo \"    - Open SMTP\"\n \n# # OpenVpn\n# iptables -A INPUT -p udp --dport 913 -j ACCEPT\n# echo \"  - Open OpenVpn\"\n\n# # Video Lan\n# iptables -A INPUT -p udp --dport 1234 -j ACCEPT\n# echo \" - Open Video Lan\"\n\n# # Teamviewer\n# iptables -A INPUT -p tcp --dport 5938 -j ACCEPT\n# iptables -A INPUT -p udp --dport 5938 -j ACCEPT\n# echo \"   - Open TeamViewer\"\n\n#########################\n#  _      ____   _____  #\n# | |    / __ \\ / ____| #\n# | |   | |  | | |  __  #\n# | |   | |  | | | |_ | #\n# | |___| |__| | |__| | #\n# |______\\____/ \\_____| #\n#########################\necho \"Log\"\n\niptables -N LOG_ACCEPT\n# drop and log everything else\niptables -A INPUT -m limit --limit 5/m --limit-burst 7 -j LOG --log-prefix \" DEFAULT DROP \"\niptables -A INPUT -j DROP\n\niptables -A INPUT -j LOG\niptables -A FORWARD -j LOG \n\necho \"==========Firewall [EEGLOO] Ok\"\n########\nexit 0 #\n########"
                            ],
                            "children": []
                        },
                        {
                            "title": "Serveur",
                            "key": "serveurFire043",
                            "type": "code",
                            "keyWords": "",
                            "description": "Serveur config a distance",
                            "content": [
                                "[cmt]Script Bash",
                                "[cod]In progress"
                            ],
                            "children": []
                        },
                        {
                            "title": "SOFT",
                            "key": "softFire043",
                            "type": "code",
                            "keyWords": "",
                            "description": "",
                            "content": [
                                "[cod]#!/bin/bash\n \n###################################################\n#*/=============================================\\*#\n# ||                      .__                  || #\n# ||   ____   ____   ____ |  |   ____   ____   || #\n# || _/ __ \\_/ __ \\ / ___\\|  |  /  _ \\ /  _ \\  || #\n# || \\  ___/\\  ___// /_/  >  |_(  <_> |  <_> ) || #\n# ||  \\___  >\\___  >___  /|____/\\____/ \\____/  || #\n# ||      \\/     \\/_____/                  2020|| #\n#.\\=============================================/.#\nclear\n\n## IPTABLES \n## CONFIG : [SOFT]\n\necho \"Setting $(hostname) Firewall Soft Mode...\"\n\n# Variables\n# export IF_RESEAU=\"eth0\"\n# export LAN=\"192.168.0.0/255.255.255.0\"\nIF_RESEAU=\"wlp3s0\"\nLAN=\"192.168.0.0/255.255.255.0\"\necho \"Interface RESEAU : $IF_RESEAU\"\necho \"LAN : $LAN\"\n\n## A QUOI SQ SERT\ntouch /etc/iptables.soft.rules\niptables-restore < /etc/iptables.soft.rules\necho \"iptables.soft.rules\"\n \n## rules\n \n###############################\n#  ______ _           _       #\n# |  ____| |         | |      #\n# | |__  | |_   _ ___| |__.   #\n# |  __| | | | | / __| '_  \\  # \n# | |    | | |_| \\__ \\ | | |  #\n# |_|    |_|\\__,_|___/_| |_|  #\n###############################\necho \"Flush\"\n\niptables -F\niptables -X\niptables -t nat -F\niptables -t nat -X\niptables -t mangle -F\niptables -t mangle -X\n\n####################################\n#  ____  _      ____   _____ _  __ #\n# |  _ \\| |    / __ \\ / ____| |/ / #\n# | |_) | |   | |  | | |    | ' /  #\n# |  _ <| |   | |  | | |    |  <   #\n# | |_) | |___| |__| | |____| . \\  #\n# |____/|______\\____/ \\_____|_|\\_\\ #\n####################################\necho \"Block\"\n\n# Les connexions entrantes sont bloquées par défaut\niptables -P INPUT DROP\n# Les connexions destinées à être routées sont acceptées par défaut\niptables -P FORWARD ACCEPT\n# Les connexions sortantes sont acceptées par défaut\niptables -P OUTPUT ACCEPT\n\n#########################\n#  _      ____   _____  #\n# | |    / __ \\ / ____| #\n# | |   | |  | | |  __  #\n# | |   | |  | | | |_ | #\n# | |___| |__| | |__| | #\n# |______\\____/ \\_____| #\n#########################\necho \"Log\"\n\niptables -A INPUT -j LOG\niptables -A FORWARD -j LOG \n\n#connexions en cours###################\n#              _____                  #\n#             / ____|                 #\n#   ___ _ __ | |     ___  _   _ _ __  #\n#  / _ \\ '_ \\| |    / _ \\| | | | '__| #\n# |  __/ | | | |___| (_) | |_| | |    #\n#  \\___|_| |_|\\_____\\___/ \\__,_|_|    #\n#######################################\necho \"current connexions\"\n\n## AUTORISE Multicast / paquets broadcastés.\niptables -A INPUT -m pkttype --pkt-type multicast -j ACCEPT\n\n# AUTORISE les connexions depuis le LAN (192.168.0)\niptables -A INPUT -s $LAN -j ACCEPT\niptables -A OUTPUT -d $LAN -j ACCEPT\n\n# AUTORISE les connexions sur la boucle locale (sur lo == 127.0.0.1)\niptables -A INPUT -i lo -j ACCEPT\niptables -A OUTPUT -o lo -j ACCEPT\n\n## AUTORISE connexion ouverte pour le trafic en entrée.\niptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\niptables -A INPUT  -i $IF_RESEAU --match state --state ESTABLISHED,RELATED -j ACCEPT\n \n## AUTORISE connexion ouverte pour le trafic en sortie.\niptables -A OUTPUT -m conntrack ! --ctstate INVALID -j ACCEPT\niptables -A OUTPUT -o $IF_RESEAU --match state --state ESTABLISHED,RELATED -j ACCEPT\n\n#########################\n#  _____ _              #\n# |  __ (_)             #\n# | |__) | _ __   __ _  #\n# |  ___/ | '_ \\ / _` | #\n# | |   | | | | | (_| | #\n# |_|   |_|_| |_|\\__, | #\n#                 __/ | #\n#                |___/  #\n#########################\necho \"Ping\"\n\n# iptables -A OUTPUT -o ${PUB_IF} -p icmp --icmp-type 0 -d 0/0 -m state --state ESTABLISHED,RELATED -j ACCEPT\n# iptables -A INPUT -i ${PUB_IF} -p icmp --icmp-type 8 -s 0/0 -m state --state NEW,ESTABLISHED,RELATED -m limit --limit 30/sec  -j ACCEPT\n\niptables -A INPUT -p icmp -j ACCEPT\niptables -A OUTPUT -p icmp -j ACCEPT\n\n# PING entrant :\niptables -A INPUT -p icmp --icmp-type 8 -j ACCEPT\n\n###############################\n#   ____  _____  ______ _   _ #\n#  / __ \\|  __ \\|  ____| \\ | |#\n# | |  | | |__) | |__  |  \\| |#\n# | |  | |  ___/|  __| | . ` |#\n# | |__| | |    | |____| |\\  |#\n#  \\____/|_|    |______|_| \\_|#\n###############################\necho \"Access :\"\n\n# FTP\niptables -A INPUT -p tcp -m tcp --dport 21 -j ACCEPT\niptables -A OUTPUT -p tcp -m tcp --dport 21 -j ACCEPT\necho \"  - Open FTP\"\n\n# SSH\niptables -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT\niptables -A OUTPUT -p tcp -m tcp --dport 22 -j ACCEPT\necho \" - Open SSH\"\n\n# HTTP\niptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT\niptables -A OUTPUT -p tcp -m tcp --dport 80 -j ACCEPT\n# iptables -A OUTPUT -o ${IF_RESEAU} -p tcp --sport 80 -d 0/0 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT\necho \"   - Open HTTP\"\n\n# HTTPS\niptables -A INPUT -p tcp -m tcp --dport 443 -j ACCEPT\niptables -A OUTPUT -p tcp -m tcp --dport 443 -j ACCEPT\necho \"    - Open HTTPS\"\n\n# NodeJS\niptables -A INPUT -p tcp -m tcp --dport 3000 -j ACCEPT\niptables -A OUTPUT -p tcp -m tcp --dport 3000 -j ACCEPT\n\n# SMTP\niptables -A OUTPUT -o ${IF_RESEAU} -p tcp --dport 25 -m state --state NEW,ESTABLISHED -j ACCEPT\niptables -A INPUT -i ${IF_RESEAU} -p tcp --sport 25 -m state --state ESTABLISHED -j ACCEPT\necho \" - Open SMTP\"\n \n# OpenVpn\niptables -A INPUT -p udp --dport 913 -j ACCEPT\necho \"    - Open OpenVpn\"\n\n# Video Lan\niptables -A INPUT -p udp --dport 1234 -j ACCEPT\necho \"   - Open Video Lan\"\n\n# Teamviewer\niptables -A INPUT -p tcp --dport 5938 -j ACCEPT\niptables -A OUTPUT -p tcp --dport 5938 -j ACCEPT\niptables -A INPUT -p udp --dport 5938 -j ACCEPT\niptables -A OUTPUT -p udp --dport 5938 -j ACCEPT\necho \"   - Open TeamViewer\"\n\necho \"==========Firewall [SOFT] Ok\"\n########\nexit 0 #\n########"
                            ],
                            "children": []
                        }
                    ]
                },
                {
                    "title": "Clear",
                    "key": "clearScript",
                    "type": "categorie",
                    "children": [
                        {
                            "title": "Snap Packets",
                            "key": "ClearFire043",
                            "type": "code",
                            "keyWords": "",
                            "description": "",
                            "content": [
                                "[cmt]Delete old revision",
                                "[ssc]snapCleaning.sh",
                                "[cod]#!/bin/bash\n# Removes old revisions of snaps\n# CLOSE ALL SNAPS BEFORE RUNNING THIS\nset -eu\nsnap list --all | awk '/disabled/{print $1, $3}' |\n    while read snapname revision; do\n        snap remove \"$snapname\" --revision=\"$revision\"\n    done"
                            ],
                            "children": []
                        }
                    ]
                }
            ]
        }
    ]
}